{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPOvzseAmJwN0HcIjV+vJy9",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/segedakate2005/-/blob/main/%D0%BC%D0%BD%203%20%D0%BB%D0%B0%D0%B1%20\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 33,
      "metadata": {
        "id": "8ZcVR7k1F8h_"
      },
      "outputs": [],
      "source": [
        "from google.colab import files\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "xGXMRKihHkRW"
      }
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "w7-pesCPHuYl"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "uploaded = files.upload()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 74
        },
        "id": "Yvz5DOqfHu5K",
        "outputId": "91751db6-2d8b-48a0-edf7-a1f5205a70d2"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-5614b945-1ec4-41b4-8bc1-4ff68d85c5e5\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-5614b945-1ec4-41b4-8bc1-4ff68d85c5e5\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving data.csv to data (1).csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv('data.csv')\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 441
        },
        "id": "HxWAFJWwH1RG",
        "outputId": "0aef2c83-1833-43bc-ca12-e35bc4e81468"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      Phoenix Feather  Unicorn Horn  Dragon's Blood  Mermaid Tears  \\\n",
              "0                 2.4          18.7            18.4           27.9   \n",
              "1                 2.1           6.0            15.0           13.3   \n",
              "2                17.2          13.9            23.8            6.8   \n",
              "3                 8.4           9.7             6.8           26.9   \n",
              "4                22.1          10.8            16.4           10.5   \n",
              "...               ...           ...             ...            ...   \n",
              "2333              9.4           2.2            15.8            5.9   \n",
              "2334             12.1           7.6            20.6            5.3   \n",
              "2335             15.2          33.2             7.2           14.5   \n",
              "2336              2.0          17.0            33.2           13.2   \n",
              "2337              6.2           2.6            11.7           23.8   \n",
              "\n",
              "      Fairy Dust  Goblin Toes  Witch's Brew  Griffin Claw  Troll Hair  \\\n",
              "0            7.9          9.6          18.3          13.2         2.5   \n",
              "1           15.6         13.1          11.0           5.0         7.2   \n",
              "2           10.7         15.8          19.4           2.7        15.4   \n",
              "3            4.6         29.1          14.6          19.7        18.0   \n",
              "4           22.0         23.4           2.6          18.2        23.8   \n",
              "...          ...          ...           ...           ...         ...   \n",
              "2333        29.7         18.7          11.5          13.1        15.3   \n",
              "2334        18.9         19.1           9.4          11.9        21.8   \n",
              "2335        16.0         16.7           1.2          32.5        34.5   \n",
              "2336        29.1         35.5          19.7          30.3        30.7   \n",
              "2337        11.4          7.3          26.4          18.2        14.0   \n",
              "\n",
              "      Kraken Ink  Minotaur Horn  Basilisk Scale  Chimera Fang  Cured  \n",
              "0           26.0           10.5            26.2          12.5      0  \n",
              "1           26.0            1.5            13.3           6.2      0  \n",
              "2           21.2           11.1            16.6          11.4      1  \n",
              "3           20.8           13.6            13.9           8.1      1  \n",
              "4           11.3            5.5            16.8          16.2      0  \n",
              "...          ...            ...             ...           ...    ...  \n",
              "2333        22.5           10.1             4.7          13.8      0  \n",
              "2334        12.0           26.7             8.4          24.4      1  \n",
              "2335        25.9            3.9            18.0          19.2      1  \n",
              "2336         4.3           15.7            20.5           2.1      1  \n",
              "2337        17.1            3.6            21.8           2.5      1  \n",
              "\n",
              "[2338 rows x 14 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-24962b4e-a07c-4473-bd82-c535e206373b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Phoenix Feather</th>\n",
              "      <th>Unicorn Horn</th>\n",
              "      <th>Dragon's Blood</th>\n",
              "      <th>Mermaid Tears</th>\n",
              "      <th>Fairy Dust</th>\n",
              "      <th>Goblin Toes</th>\n",
              "      <th>Witch's Brew</th>\n",
              "      <th>Griffin Claw</th>\n",
              "      <th>Troll Hair</th>\n",
              "      <th>Kraken Ink</th>\n",
              "      <th>Minotaur Horn</th>\n",
              "      <th>Basilisk Scale</th>\n",
              "      <th>Chimera Fang</th>\n",
              "      <th>Cured</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2.4</td>\n",
              "      <td>18.7</td>\n",
              "      <td>18.4</td>\n",
              "      <td>27.9</td>\n",
              "      <td>7.9</td>\n",
              "      <td>9.6</td>\n",
              "      <td>18.3</td>\n",
              "      <td>13.2</td>\n",
              "      <td>2.5</td>\n",
              "      <td>26.0</td>\n",
              "      <td>10.5</td>\n",
              "      <td>26.2</td>\n",
              "      <td>12.5</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2.1</td>\n",
              "      <td>6.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>13.3</td>\n",
              "      <td>15.6</td>\n",
              "      <td>13.1</td>\n",
              "      <td>11.0</td>\n",
              "      <td>5.0</td>\n",
              "      <td>7.2</td>\n",
              "      <td>26.0</td>\n",
              "      <td>1.5</td>\n",
              "      <td>13.3</td>\n",
              "      <td>6.2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>17.2</td>\n",
              "      <td>13.9</td>\n",
              "      <td>23.8</td>\n",
              "      <td>6.8</td>\n",
              "      <td>10.7</td>\n",
              "      <td>15.8</td>\n",
              "      <td>19.4</td>\n",
              "      <td>2.7</td>\n",
              "      <td>15.4</td>\n",
              "      <td>21.2</td>\n",
              "      <td>11.1</td>\n",
              "      <td>16.6</td>\n",
              "      <td>11.4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8.4</td>\n",
              "      <td>9.7</td>\n",
              "      <td>6.8</td>\n",
              "      <td>26.9</td>\n",
              "      <td>4.6</td>\n",
              "      <td>29.1</td>\n",
              "      <td>14.6</td>\n",
              "      <td>19.7</td>\n",
              "      <td>18.0</td>\n",
              "      <td>20.8</td>\n",
              "      <td>13.6</td>\n",
              "      <td>13.9</td>\n",
              "      <td>8.1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>22.1</td>\n",
              "      <td>10.8</td>\n",
              "      <td>16.4</td>\n",
              "      <td>10.5</td>\n",
              "      <td>22.0</td>\n",
              "      <td>23.4</td>\n",
              "      <td>2.6</td>\n",
              "      <td>18.2</td>\n",
              "      <td>23.8</td>\n",
              "      <td>11.3</td>\n",
              "      <td>5.5</td>\n",
              "      <td>16.8</td>\n",
              "      <td>16.2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2333</th>\n",
              "      <td>9.4</td>\n",
              "      <td>2.2</td>\n",
              "      <td>15.8</td>\n",
              "      <td>5.9</td>\n",
              "      <td>29.7</td>\n",
              "      <td>18.7</td>\n",
              "      <td>11.5</td>\n",
              "      <td>13.1</td>\n",
              "      <td>15.3</td>\n",
              "      <td>22.5</td>\n",
              "      <td>10.1</td>\n",
              "      <td>4.7</td>\n",
              "      <td>13.8</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2334</th>\n",
              "      <td>12.1</td>\n",
              "      <td>7.6</td>\n",
              "      <td>20.6</td>\n",
              "      <td>5.3</td>\n",
              "      <td>18.9</td>\n",
              "      <td>19.1</td>\n",
              "      <td>9.4</td>\n",
              "      <td>11.9</td>\n",
              "      <td>21.8</td>\n",
              "      <td>12.0</td>\n",
              "      <td>26.7</td>\n",
              "      <td>8.4</td>\n",
              "      <td>24.4</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2335</th>\n",
              "      <td>15.2</td>\n",
              "      <td>33.2</td>\n",
              "      <td>7.2</td>\n",
              "      <td>14.5</td>\n",
              "      <td>16.0</td>\n",
              "      <td>16.7</td>\n",
              "      <td>1.2</td>\n",
              "      <td>32.5</td>\n",
              "      <td>34.5</td>\n",
              "      <td>25.9</td>\n",
              "      <td>3.9</td>\n",
              "      <td>18.0</td>\n",
              "      <td>19.2</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2336</th>\n",
              "      <td>2.0</td>\n",
              "      <td>17.0</td>\n",
              "      <td>33.2</td>\n",
              "      <td>13.2</td>\n",
              "      <td>29.1</td>\n",
              "      <td>35.5</td>\n",
              "      <td>19.7</td>\n",
              "      <td>30.3</td>\n",
              "      <td>30.7</td>\n",
              "      <td>4.3</td>\n",
              "      <td>15.7</td>\n",
              "      <td>20.5</td>\n",
              "      <td>2.1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2337</th>\n",
              "      <td>6.2</td>\n",
              "      <td>2.6</td>\n",
              "      <td>11.7</td>\n",
              "      <td>23.8</td>\n",
              "      <td>11.4</td>\n",
              "      <td>7.3</td>\n",
              "      <td>26.4</td>\n",
              "      <td>18.2</td>\n",
              "      <td>14.0</td>\n",
              "      <td>17.1</td>\n",
              "      <td>3.6</td>\n",
              "      <td>21.8</td>\n",
              "      <td>2.5</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2338 rows × 14 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24962b4e-a07c-4473-bd82-c535e206373b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-24962b4e-a07c-4473-bd82-c535e206373b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-24962b4e-a07c-4473-bd82-c535e206373b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-81e87f11-0309-45f3-ae90-b572fe536a7d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-81e87f11-0309-45f3-ae90-b572fe536a7d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-81e87f11-0309-45f3-ae90-b572fe536a7d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 2338,\n  \"fields\": [\n    {\n      \"column\": \"Phoenix Feather\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.669968650630212,\n        \"min\": 1.0,\n        \"max\": 42.1,\n        \"num_unique_values\": 362,\n        \"samples\": [\n          14.0,\n          26.7,\n          38.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unicorn Horn\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.225162264299203,\n        \"min\": 1.0,\n        \"max\": 34.1,\n        \"num_unique_values\": 303,\n        \"samples\": [\n          22.3,\n          19.3,\n          21.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dragon's Blood\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.3725177264872,\n        \"min\": 1.0,\n        \"max\": 40.8,\n        \"num_unique_values\": 351,\n        \"samples\": [\n          24.9,\n          6.4,\n          19.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mermaid Tears\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.545244234942487,\n        \"min\": 1.0,\n        \"max\": 35.8,\n        \"num_unique_values\": 321,\n        \"samples\": [\n          15.0,\n          13.9,\n          28.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fairy Dust\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.349339757089643,\n        \"min\": 1.0,\n        \"max\": 40.4,\n        \"num_unique_values\": 351,\n        \"samples\": [\n          7.3,\n          37.1,\n          28.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Goblin Toes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.83147597833111,\n        \"min\": 1.0,\n        \"max\": 37.8,\n        \"num_unique_values\": 330,\n        \"samples\": [\n          5.8,\n          10.2,\n          7.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Witch's Brew\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.709753128300245,\n        \"min\": 1.0,\n        \"max\": 37.3,\n        \"num_unique_values\": 329,\n        \"samples\": [\n          15.7,\n          17.2,\n          22.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Griffin Claw\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.132678298747877,\n        \"min\": 1.0,\n        \"max\": 39.4,\n        \"num_unique_values\": 341,\n        \"samples\": [\n          22.6,\n          23.0,\n          2.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Troll Hair\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.57902710030655,\n        \"min\": 1.0,\n        \"max\": 44.8,\n        \"num_unique_values\": 379,\n        \"samples\": [\n          12.3,\n          29.3,\n          26.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Kraken Ink\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.014197206305607,\n        \"min\": 1.0,\n        \"max\": 39.5,\n        \"num_unique_values\": 345,\n        \"samples\": [\n          22.6,\n          34.6,\n          14.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Minotaur Horn\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.045194956066915,\n        \"min\": 1.0,\n        \"max\": 33.7,\n        \"num_unique_values\": 295,\n        \"samples\": [\n          29.3,\n          24.7,\n          6.3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Basilisk Scale\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.55913893532507,\n        \"min\": 1.0,\n        \"max\": 42.0,\n        \"num_unique_values\": 364,\n        \"samples\": [\n          27.3,\n          27.1,\n          22.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chimera Fang\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.047539582800761,\n        \"min\": 1.0,\n        \"max\": 37.8,\n        \"num_unique_values\": 330,\n        \"samples\": [\n          1.1,\n          19.1,\n          31.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cured\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Звичайно! Нижче подано **описи магічних інгредієнтів**, які ви надали — у стилі фентезійної енциклопедії 🌟\n",
        "\n",
        "---\n",
        "\n",
        "### 🧙‍♂️ Магічні інгредієнти та їх значення:\n",
        "\n",
        "1. **Phoenix Feather (Перо Фенікса)**  \n",
        "   🔥 Символ відродження та безсмертя. Використовується для заклять зцілення, воскресіння або вогняної трансформації.\n",
        "\n",
        "2. **Unicorn Horn (Ріг Єдинорога)**  \n",
        "   ✨ Потужний очищуючий інгредієнт. Відомий здатністю нейтралізувати отрути й темну магію.\n",
        "\n",
        "3. **Dragon's Blood (Кров Дракона)**  \n",
        "   🐉 Підсилювач сили заклять. Дає вибухову міць, часто використовується у бойових або захисних чарах.\n",
        "\n",
        "4. **Mermaid Tears (Сльози Русалки)**  \n",
        "   🌊 Мають сильний емоційний заряд. Застосовуються у любовних зіллях або чарах, пов’язаних з водою та емоціями.\n",
        "\n",
        "5. **Fairy Dust (Пил Феї)**  \n",
        "   ✨ Викликає ілюзії, політ або легкість рухів. Один з найулюбленіших інгредієнтів у дитячій магії.\n",
        "\n",
        "6. **Goblin Toes (Пальці Гобліна)**  \n",
        "   🦶 Темний інгредієнт, використовується в прокляттях, зіллях удачі або для виклику хаосу.\n",
        "\n",
        "7. **Witch's Brew (Відвар Відьми)**  \n",
        "   🧪 Багатокомпонентна основа для складних зіль. Може набувати різного ефекту в залежності від інших інгредієнтів.\n",
        "\n",
        "8. **Griffin Claw (Кіготь Грифона)**  \n",
        "   🦅 Символ честі, сили й захисту. Часто використовується в амулетах або захисних чарах.\n",
        "\n",
        "9. **Troll Hair (Волосся Троля)**  \n",
        "   💪 Міцний і грубий інгредієнт. Добре підходить для заклять на витривалість, регенерацію або силу.\n",
        "\n",
        "10. **Kraken Ink (Чорнило Кракена)**  \n",
        "   🐙 Темна рідина, яка допомагає у чарах приховування, ілюзій і маніпуляцій.\n",
        "\n",
        "11. **Minotaur Horn (Ріг Мінотавра)**  \n",
        "   🐃 Використовується в заклинаннях орієнтації, лабіринтів або захисту території.\n",
        "\n",
        "12. **Basilisk Scale (Луска Василіска)**  \n",
        "   🐍 Один з найбільш отруйних і рідкісних інгредієнтів. Має властивості паралізації та знищення.\n",
        "\n",
        "13. **Chimera Fang (Ікло Хімери)**  \n",
        "   🐲⚖️ Символ непередбачуваності. Використовується в експериментальній магії або для зміни форми.\n",
        "\n",
        "14. **Cured (Оброблений / висушений інгредієнт)**  \n",
        "   🌿 Позначає, що інгредієнт був консервований для довготривалого зберігання. Використовується в основах більшості зіль.\n",
        "\n",
        "---\n",
        "\n"
      ],
      "metadata": {
        "id": "YOX0Y0yrIXsw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "o5wLDW5GIrdn",
        "outputId": "105fb6f7-336a-442f-b177-1fecca09f8ed"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 2338 entries, 0 to 2337\n",
            "Data columns (total 14 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   Phoenix Feather  2338 non-null   float64\n",
            " 1   Unicorn Horn     2338 non-null   float64\n",
            " 2   Dragon's Blood   2338 non-null   float64\n",
            " 3   Mermaid Tears    2338 non-null   float64\n",
            " 4   Fairy Dust       2338 non-null   float64\n",
            " 5   Goblin Toes      2338 non-null   float64\n",
            " 6   Witch's Brew     2338 non-null   float64\n",
            " 7   Griffin Claw     2338 non-null   float64\n",
            " 8   Troll Hair       2338 non-null   float64\n",
            " 9   Kraken Ink       2338 non-null   float64\n",
            " 10  Minotaur Horn    2338 non-null   float64\n",
            " 11  Basilisk Scale   2338 non-null   float64\n",
            " 12  Chimera Fang     2338 non-null   float64\n",
            " 13  Cured            2338 non-null   int64  \n",
            "dtypes: float64(13), int64(1)\n",
            "memory usage: 255.8 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.duplicated().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "sLtISFGnJZon",
        "outputId": "74891c2c-a3e4-4fd7-9a24-64d76c054cda"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.int64(0)"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 337
        },
        "id": "RGKiR5xUJdle",
        "outputId": "f71d3cfb-d0f5-448e-c88c-f54325894ffb"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Phoenix Feather  Unicorn Horn  Dragon's Blood  Mermaid Tears  \\\n",
              "count      2338.000000   2338.000000     2338.000000    2338.000000   \n",
              "mean         15.365697     10.946749       16.115654      13.627973   \n",
              "std           8.669969      7.225162        8.372518       7.545244   \n",
              "min           1.000000      1.000000        1.000000       1.000000   \n",
              "25%           8.500000      5.300000        9.600000       7.600000   \n",
              "50%          14.700000      9.500000       15.800000      13.100000   \n",
              "75%          21.300000     15.575000       22.000000      19.000000   \n",
              "max          42.100000     34.100000       40.800000      35.800000   \n",
              "\n",
              "        Fairy Dust  Goblin Toes  Witch's Brew  Griffin Claw   Troll Hair  \\\n",
              "count  2338.000000  2338.000000   2338.000000   2338.000000  2338.000000   \n",
              "mean     15.069504    14.157271     12.328914     14.911206    16.871685   \n",
              "std       8.349340     7.831476      7.709753      8.132678     9.579027   \n",
              "min       1.000000     1.000000      1.000000      1.000000     1.000000   \n",
              "25%       8.625000     7.900000      6.325000      8.400000     8.900000   \n",
              "50%      14.500000    13.500000     11.200000     14.400000    16.300000   \n",
              "75%      20.700000    19.500000     16.900000     20.500000    24.000000   \n",
              "max      40.400000    37.800000     37.300000     39.400000    44.800000   \n",
              "\n",
              "        Kraken Ink  Minotaur Horn  Basilisk Scale  Chimera Fang        Cured  \n",
              "count  2338.000000    2338.000000     2338.000000   2338.000000  2338.000000  \n",
              "mean     14.890590      10.916125       15.371600     12.084003     0.496578  \n",
              "std       8.014197       7.045195        8.559139      8.047540     0.500095  \n",
              "min       1.000000       1.000000        1.000000      1.000000     0.000000  \n",
              "25%       8.800000       5.200000        8.800000      5.600000     0.000000  \n",
              "50%      14.400000       9.700000       14.800000     10.500000     0.000000  \n",
              "75%      20.400000      15.375000       21.100000     17.275000     1.000000  \n",
              "max      39.500000      33.700000       42.000000     37.800000     1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-440d8d7f-daca-4ed6-abb7-c1234ac02a89\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Phoenix Feather</th>\n",
              "      <th>Unicorn Horn</th>\n",
              "      <th>Dragon's Blood</th>\n",
              "      <th>Mermaid Tears</th>\n",
              "      <th>Fairy Dust</th>\n",
              "      <th>Goblin Toes</th>\n",
              "      <th>Witch's Brew</th>\n",
              "      <th>Griffin Claw</th>\n",
              "      <th>Troll Hair</th>\n",
              "      <th>Kraken Ink</th>\n",
              "      <th>Minotaur Horn</th>\n",
              "      <th>Basilisk Scale</th>\n",
              "      <th>Chimera Fang</th>\n",
              "      <th>Cured</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>2338.000000</td>\n",
              "      <td>2338.000000</td>\n",
              "      <td>2338.000000</td>\n",
              "      <td>2338.000000</td>\n",
              "      <td>2338.000000</td>\n",
              "      <td>2338.000000</td>\n",
              "      <td>2338.000000</td>\n",
              "      <td>2338.000000</td>\n",
              "      <td>2338.000000</td>\n",
              "      <td>2338.000000</td>\n",
              "      <td>2338.000000</td>\n",
              "      <td>2338.000000</td>\n",
              "      <td>2338.000000</td>\n",
              "      <td>2338.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>15.365697</td>\n",
              "      <td>10.946749</td>\n",
              "      <td>16.115654</td>\n",
              "      <td>13.627973</td>\n",
              "      <td>15.069504</td>\n",
              "      <td>14.157271</td>\n",
              "      <td>12.328914</td>\n",
              "      <td>14.911206</td>\n",
              "      <td>16.871685</td>\n",
              "      <td>14.890590</td>\n",
              "      <td>10.916125</td>\n",
              "      <td>15.371600</td>\n",
              "      <td>12.084003</td>\n",
              "      <td>0.496578</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>8.669969</td>\n",
              "      <td>7.225162</td>\n",
              "      <td>8.372518</td>\n",
              "      <td>7.545244</td>\n",
              "      <td>8.349340</td>\n",
              "      <td>7.831476</td>\n",
              "      <td>7.709753</td>\n",
              "      <td>8.132678</td>\n",
              "      <td>9.579027</td>\n",
              "      <td>8.014197</td>\n",
              "      <td>7.045195</td>\n",
              "      <td>8.559139</td>\n",
              "      <td>8.047540</td>\n",
              "      <td>0.500095</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>8.500000</td>\n",
              "      <td>5.300000</td>\n",
              "      <td>9.600000</td>\n",
              "      <td>7.600000</td>\n",
              "      <td>8.625000</td>\n",
              "      <td>7.900000</td>\n",
              "      <td>6.325000</td>\n",
              "      <td>8.400000</td>\n",
              "      <td>8.900000</td>\n",
              "      <td>8.800000</td>\n",
              "      <td>5.200000</td>\n",
              "      <td>8.800000</td>\n",
              "      <td>5.600000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>14.700000</td>\n",
              "      <td>9.500000</td>\n",
              "      <td>15.800000</td>\n",
              "      <td>13.100000</td>\n",
              "      <td>14.500000</td>\n",
              "      <td>13.500000</td>\n",
              "      <td>11.200000</td>\n",
              "      <td>14.400000</td>\n",
              "      <td>16.300000</td>\n",
              "      <td>14.400000</td>\n",
              "      <td>9.700000</td>\n",
              "      <td>14.800000</td>\n",
              "      <td>10.500000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>21.300000</td>\n",
              "      <td>15.575000</td>\n",
              "      <td>22.000000</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>20.700000</td>\n",
              "      <td>19.500000</td>\n",
              "      <td>16.900000</td>\n",
              "      <td>20.500000</td>\n",
              "      <td>24.000000</td>\n",
              "      <td>20.400000</td>\n",
              "      <td>15.375000</td>\n",
              "      <td>21.100000</td>\n",
              "      <td>17.275000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>42.100000</td>\n",
              "      <td>34.100000</td>\n",
              "      <td>40.800000</td>\n",
              "      <td>35.800000</td>\n",
              "      <td>40.400000</td>\n",
              "      <td>37.800000</td>\n",
              "      <td>37.300000</td>\n",
              "      <td>39.400000</td>\n",
              "      <td>44.800000</td>\n",
              "      <td>39.500000</td>\n",
              "      <td>33.700000</td>\n",
              "      <td>42.000000</td>\n",
              "      <td>37.800000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-440d8d7f-daca-4ed6-abb7-c1234ac02a89')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-440d8d7f-daca-4ed6-abb7-c1234ac02a89 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-440d8d7f-daca-4ed6-abb7-c1234ac02a89');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-257b13e3-0f19-4db7-bc92-4534c8ceba2d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-257b13e3-0f19-4db7-bc92-4534c8ceba2d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-257b13e3-0f19-4db7-bc92-4534c8ceba2d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Phoenix Feather\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 821.0604076518755,\n        \"min\": 1.0,\n        \"max\": 2338.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          15.365697177074422,\n          14.7,\n          2338.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unicorn Horn\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 822.4435755153033,\n        \"min\": 1.0,\n        \"max\": 2338.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          10.946749358426006,\n          9.5,\n          2338.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dragon's Blood\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 820.9505284989144,\n        \"min\": 1.0,\n        \"max\": 2338.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          16.115654405474764,\n          15.8,\n          2338.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mermaid Tears\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 821.7400231852649,\n        \"min\": 1.0,\n        \"max\": 2338.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          13.62797262617622,\n          13.1,\n          2338.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Fairy Dust\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 821.2037184056994,\n        \"min\": 1.0,\n        \"max\": 2338.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          15.069503849443969,\n          14.5,\n          2338.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Goblin Toes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 821.5447438011931,\n        \"min\": 1.0,\n        \"max\": 2338.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          14.157271171941833,\n          13.5,\n          2338.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Witch's Brew\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 821.9942898300324,\n        \"min\": 1.0,\n        \"max\": 2338.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          12.328913601368692,\n          11.2,\n          2338.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Griffin Claw\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 821.2957908043995,\n        \"min\": 1.0,\n        \"max\": 2338.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          14.911206159110348,\n          14.4,\n          2338.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Troll Hair\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 820.5779431719162,\n        \"min\": 1.0,\n        \"max\": 2338.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          16.87168520102652,\n          16.3,\n          2338.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Kraken Ink\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 821.2826306368456,\n        \"min\": 1.0,\n        \"max\": 2338.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          14.89059024807528,\n          14.4,\n          2338.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Minotaur Horn\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 822.4780000604501,\n        \"min\": 1.0,\n        \"max\": 2338.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          10.916124893071,\n          9.7,\n          2338.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Basilisk Scale\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 821.0597586136382,\n        \"min\": 1.0,\n        \"max\": 2338.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          15.371599657827204,\n          14.8,\n          2338.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chimera Fang\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 822.0206744911073,\n        \"min\": 1.0,\n        \"max\": 2338.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          12.084003421727973,\n          10.5,\n          2338.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cured\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 826.4565772452605,\n        \"min\": 0.0,\n        \"max\": 2338.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.4965782720273738,\n          1.0,\n          0.5000952524486713\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 24
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.isnull() . sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 523
        },
        "id": "oZMtUUUrJihL",
        "outputId": "9561de72-e3dd-49c0-e8f5-a682e5d6811c"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Phoenix Feather    0\n",
              "Unicorn Horn       0\n",
              "Dragon's Blood     0\n",
              "Mermaid Tears      0\n",
              "Fairy Dust         0\n",
              "Goblin Toes        0\n",
              "Witch's Brew       0\n",
              "Griffin Claw       0\n",
              "Troll Hair         0\n",
              "Kraken Ink         0\n",
              "Minotaur Horn      0\n",
              "Basilisk Scale     0\n",
              "Chimera Fang       0\n",
              "Cured              0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Phoenix Feather</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Unicorn Horn</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Dragon's Blood</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Mermaid Tears</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fairy Dust</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Goblin Toes</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Witch's Brew</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Griffin Claw</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Troll Hair</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kraken Ink</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Minotaur Horn</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Basilisk Scale</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Chimera Fang</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Cured</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Cured'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 178
        },
        "id": "bHED_eJ1J2I7",
        "outputId": "ed2a16f6-df08-4ce0-9a89-6773e0c8a045"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cured\n",
              "0    1177\n",
              "1    1161\n",
              "Name: count, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Cured</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1177</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1161</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.countplot(x='Cured', data=df)\n",
        "plt.title('Cured')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "id": "lB02uy2JLAer",
        "outputId": "a13aee9e-60a1-4290-9ae7-55beb7210f40"
      },
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_matrix = df.corr()\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', linewidths=0.5)\n",
        "plt.title('Корреляційна матриця')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 797
        },
        "id": "eGYUou0KLoMY",
        "outputId": "58d150a0-a1eb-42a5-bb2d-e38452196506"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "correlation_with_Cured= correlation_matrix['Cured'].sort_values(ascending=False)\n",
        "correlation_with_Cured"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 523
        },
        "id": "Xe-7w1XwNYpm",
        "outputId": "c2297a69-7efa-4f03-efd1-a60b6a0e2bc8"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Cured              1.000000\n",
              "Troll Hair         0.498165\n",
              "Witch's Brew       0.245993\n",
              "Goblin Toes        0.046314\n",
              "Chimera Fang       0.022144\n",
              "Phoenix Feather    0.015931\n",
              "Fairy Dust         0.015004\n",
              "Minotaur Horn      0.011329\n",
              "Mermaid Tears      0.009619\n",
              "Griffin Claw       0.001019\n",
              "Dragon's Blood    -0.007662\n",
              "Unicorn Horn      -0.008239\n",
              "Kraken Ink        -0.022845\n",
              "Basilisk Scale    -0.052436\n",
              "Name: Cured, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Cured</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Cured</th>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Troll Hair</th>\n",
              "      <td>0.498165</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Witch's Brew</th>\n",
              "      <td>0.245993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Goblin Toes</th>\n",
              "      <td>0.046314</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Chimera Fang</th>\n",
              "      <td>0.022144</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Phoenix Feather</th>\n",
              "      <td>0.015931</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Fairy Dust</th>\n",
              "      <td>0.015004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Minotaur Horn</th>\n",
              "      <td>0.011329</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Mermaid Tears</th>\n",
              "      <td>0.009619</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Griffin Claw</th>\n",
              "      <td>0.001019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Dragon's Blood</th>\n",
              "      <td>-0.007662</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Unicorn Horn</th>\n",
              "      <td>-0.008239</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Kraken Ink</th>\n",
              "      <td>-0.022845</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Basilisk Scale</th>\n",
              "      <td>-0.052436</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "uaz5noudOrhQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.linear_model import LinearRegression, Ridge, Lasso\n",
        "from sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor\n",
        "from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_error\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import GridSearchCV"
      ],
      "metadata": {
        "id": "w9Cct90dNx7Q"
      },
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=df.drop('Cured' , axis=1)\n",
        "y=df['Cured']\n",
        "X_train, X_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)"
      ],
      "metadata": {
        "id": "1UrUJ1fKO5g8"
      },
      "execution_count": 41,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "scaler = StandardScaler()\n",
        "X_train = scaler.fit_transform(X_train)\n",
        "X_test = scaler.transform(X_test)"
      ],
      "metadata": {
        "id": "SOTCEP4ZP_v1"
      },
      "execution_count": 42,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.ensemble import RandomForestClassifier, GradientBoostingClassifier\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.svm import SVC\n",
        "from sklearn.model_selection import RandomizedSearchCV\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import mean_absolute_error, mean_squared_error, accuracy_score, precision_score, recall_score, f1_score\n",
        "from sklearn.metrics import classification_report, confusion_matrix"
      ],
      "metadata": {
        "id": "DnXNLXcgSGLk"
      },
      "execution_count": 50,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Список моделей\n",
        "models = {\n",
        "    \"Random Forest\": RandomForestClassifier(random_state=42),\n",
        "    \"Gradient Boosting\": GradientBoostingClassifier(random_state=42),\n",
        "    \"Logistic Regression\": LogisticRegression (max_iter=1000),\n",
        "    \"Support Vector Machine\": SVC()\n",
        "}\n",
        "\n",
        "# Тренуємо, оцінюємо й виводимо звіти\n",
        "for name, model in models.items():\n",
        "    model.fit(X_train, y_train)\n",
        "    predictions = model.predict(X_test)\n",
        "\n",
        "    print(f\"\\n=== {name} ===\")\n",
        "    print(classification_report(y_test, predictions))\n",
        "\n",
        "    # Матриця плутанини\n",
        "    cm = confusion_matrix(y_test, predictions)\n",
        "    plt.figure(figsize=(5, 4))\n",
        "    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues')\n",
        "    plt.title(f'Confusion Matrix - {name}')\n",
        "    plt.xlabel('Predicted')\n",
        "    plt.ylabel('Actual')\n",
        "    plt.tight_layout()\n",
        "    plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Lk4zmqWhQOfW",
        "outputId": "7d867c3f-cdc5-4b8c-8d8b-17d6dcdcb768"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "=== Random Forest ===\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.92      0.96      0.94       231\n",
            "           1       0.96      0.92      0.94       237\n",
            "\n",
            "    accuracy                           0.94       468\n",
            "   macro avg       0.94      0.94      0.94       468\n",
            "weighted avg       0.94      0.94      0.94       468\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "=== Gradient Boosting ===\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.92      0.93      0.93       231\n",
            "           1       0.93      0.92      0.93       237\n",
            "\n",
            "    accuracy                           0.93       468\n",
            "   macro avg       0.93      0.93      0.93       468\n",
            "weighted avg       0.93      0.93      0.93       468\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "=== Logistic Regression ===\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.89      0.90      0.89       231\n",
            "           1       0.90      0.89      0.89       237\n",
            "\n",
            "    accuracy                           0.89       468\n",
            "   macro avg       0.89      0.89      0.89       468\n",
            "weighted avg       0.89      0.89      0.89       468\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "=== Support Vector Machine ===\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.96      0.96      0.96       231\n",
            "           1       0.96      0.96      0.96       237\n",
            "\n",
            "    accuracy                           0.96       468\n",
            "   macro avg       0.96      0.96      0.96       468\n",
            "weighted avg       0.96      0.96      0.96       468\n",
            "\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Параметри для підбору\n",
        "param_distributions = {\n",
        "    \"Random Forest\": {\n",
        "        'n_estimators': [100, 200, 300],\n",
        "        'max_depth': [None, 10, 20, 30],\n",
        "        'min_samples_split': [2, 5, 10]\n",
        "    },\n",
        "    \"Gradient Boosting\": {\n",
        "        'n_estimators': [100, 150, 200],\n",
        "        'learning_rate': [0.01, 0.1, 0.2],\n",
        "        'max_depth': [3, 5, 7]\n",
        "    },\n",
        "    \"Logistic Regression\": {\n",
        "        'C': [0.01, 0.1, 1, 10],\n",
        "        'penalty': ['l2'],\n",
        "        'solver': ['lbfgs', 'liblinear']\n",
        "    },\n",
        "    \"Support Vector Machine\": {\n",
        "        'C': [0.1, 1, 10],\n",
        "        'gamma': ['scale', 'auto'],\n",
        "        'kernel': ['linear', 'rbf', 'poly']\n",
        "    }\n",
        "}\n",
        "\n",
        "# Підібрані моделі\n",
        "best_models = {}\n",
        "\n",
        "# Перебір моделей\n",
        "for name, model in models.items():\n",
        "    print(f\"\\n🔍 Підбір параметрів для {name}...\")\n",
        "    search = RandomizedSearchCV(\n",
        "        model,\n",
        "        param_distributions[name],\n",
        "        n_iter=10,\n",
        "        scoring='accuracy',\n",
        "        cv=3,\n",
        "        random_state=42,\n",
        "        n_jobs=-1\n",
        "    )\n",
        "    search.fit(X_train, y_train)\n",
        "    best_model = search.best_estimator_\n",
        "    best_models[name] = best_model\n",
        "    print(f\"✅ Найкращі параметри: {search.best_params_}\")\n",
        "\n",
        "    # Оцінка\n",
        "    y_pred = best_model.predict(X_test)\n",
        "    print(\"📊 Класифікаційний звіт:\")\n",
        "    print(classification_report(y_test, y_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gAjXkvwOcszv",
        "outputId": "f6710db4-c249-4988-9636-3429151c04f3"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "🔍 Підбір параметрів для Random Forest...\n",
            "✅ Найкращі параметри: {'n_estimators': 200, 'min_samples_split': 5, 'max_depth': 30}\n",
            "📊 Класифікаційний звіт:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.92      0.95      0.93       231\n",
            "           1       0.95      0.92      0.93       237\n",
            "\n",
            "    accuracy                           0.93       468\n",
            "   macro avg       0.93      0.93      0.93       468\n",
            "weighted avg       0.93      0.93      0.93       468\n",
            "\n",
            "\n",
            "🔍 Підбір параметрів для Gradient Boosting...\n",
            "✅ Найкращі параметри: {'n_estimators': 100, 'max_depth': 5, 'learning_rate': 0.2}\n",
            "📊 Класифікаційний звіт:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.94      0.96      0.95       231\n",
            "           1       0.96      0.95      0.95       237\n",
            "\n",
            "    accuracy                           0.95       468\n",
            "   macro avg       0.95      0.95      0.95       468\n",
            "weighted avg       0.95      0.95      0.95       468\n",
            "\n",
            "\n",
            "🔍 Підбір параметрів для Logistic Regression...\n",
            "✅ Найкращі параметри: {'solver': 'lbfgs', 'penalty': 'l2', 'C': 10}\n",
            "📊 Класифікаційний звіт:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.89      0.90      0.89       231\n",
            "           1       0.90      0.89      0.89       237\n",
            "\n",
            "    accuracy                           0.89       468\n",
            "   macro avg       0.89      0.89      0.89       468\n",
            "weighted avg       0.89      0.89      0.89       468\n",
            "\n",
            "\n",
            "🔍 Підбір параметрів для Support Vector Machine...\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/sklearn/model_selection/_search.py:317: UserWarning: The total space of parameters 8 is smaller than n_iter=10. Running 8 iterations. For exhaustive searches, use GridSearchCV.\n",
            "  warnings.warn(\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "✅ Найкращі параметри: {'kernel': 'rbf', 'gamma': 'scale', 'C': 10}\n",
            "📊 Класифікаційний звіт:\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.95      0.97      0.96       231\n",
            "           1       0.97      0.95      0.96       237\n",
            "\n",
            "    accuracy                           0.96       468\n",
            "   macro avg       0.96      0.96      0.96       468\n",
            "weighted avg       0.96      0.96      0.96       468\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Вибір найкращої SVC моделі\n",
        "best_svc = best_models[\"Support Vector Machine\"]\n",
        ""
      ],
      "metadata": {
        "id": "eHp4_Ztegb7R"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Вибір 10 випадкових індексів\n",
        "random_indices = np.random.choice(X_test.shape[0], 10, replace=False)\n",
        "\n",
        "# Отримання прогнозованих значень від найкращої моделі SVC\n",
        "y_pred_best_svc = best_svc.predict(X_test)\n",
        "\n",
        "# Порівняння справжніх і прогнозованих значень для вибраних випадкових індексів\n",
        "random_results_df = pd.DataFrame({\n",
        "    'Index': random_indices,\n",
        "    'True Values': y_test.iloc[random_indices].values,  # Справжні значення\n",
        "    'Predicted Values': y_pred_best_svc[random_indices]  # Прогнозовані значення\n",
        "})\n",
        "\n",
        "random_results_df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 363
        },
        "id": "hbuGK9kzfFrV",
        "outputId": "d535e9f7-92e7-4b7a-c44a-dbba0b6af5d0"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Index  True Values  Predicted Values\n",
              "0    140            0                 0\n",
              "1    240            1                 1\n",
              "2    318            0                 0\n",
              "3    196            0                 0\n",
              "4     77            1                 1\n",
              "5    390            0                 0\n",
              "6    263            1                 0\n",
              "7    142            1                 1\n",
              "8    437            1                 1\n",
              "9    320            0                 0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b6c2c73b-a915-4450-9461-0dd813317a89\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Index</th>\n",
              "      <th>True Values</th>\n",
              "      <th>Predicted Values</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>140</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>240</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>318</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>196</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>77</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>390</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>263</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>142</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>437</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>320</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b6c2c73b-a915-4450-9461-0dd813317a89')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b6c2c73b-a915-4450-9461-0dd813317a89 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b6c2c73b-a915-4450-9461-0dd813317a89');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-81bb1ea3-700a-4292-9ca9-9bce2b07be28\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-81bb1ea3-700a-4292-9ca9-9bce2b07be28')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-81bb1ea3-700a-4292-9ca9-9bce2b07be28 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "random_results_df",
              "summary": "{\n  \"name\": \"random_results_df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"Index\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 115,\n        \"min\": 77,\n        \"max\": 437,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          437,\n          240,\n          390\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"True Values\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Predicted Values\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 55
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Висновки: була розв'язана задача класифікацій, був проведений аналіз даних, виведено справжні та прогнозовані результати, визначили оптимальні рецепти для лікування принцеси. Далі ми створили кореляцйну матрицю, масштабували ознаки та побудували діаграми різних типів для деяких значень, щоб порівняти їх значення.Знайшли найкращу модель- метод опорних векторів. Розробили модель, яка може точно визначити дію компонентів. Використали  RandomForestClassifier.\n"
      ],
      "metadata": {
        "id": "QYtQWhYyhcXB"
      }
    }
  ]
}